Problem #1:

positions_of_large_groups:
    Appropriate Data Set: 

-------------------------------------

Problem #2:

valid_anagram
    Appropriate Data Set: Dictionary
        - keep count of the times a letter occurs in a string 
    
    If the key-value pairs of the two strings are identical or the contents of the 
    dictionary, then the strings are anagrams of each other. 

    Runtime Complexity:
        O(n^3)
        - You are iterating through a for loop once for each string to create a dictionary for each
            and then conducting a final for loop while comparing if the contents of both dictionaries 
            are equal. 

    Alternative Solutions:
        If sorted() is allowed: 
            - a list is created from both strings and then alphabeticallly ordered, so 
                you can compare if the two are identical.
         Runtime Complexity: O(nlog(n) + mlog(m))
            - You are sorting through each string, so the n and m denote the length of each string 
            respectively while the sorted() function is O(n log n) runtime. 

-------------------------------------
        
Problem #3:

longest_palindromic_substring
    A palindrome is a word that is identical to its reversed self. In code:
        word == word[::-1]

    In order to solve this problem, you are meant to save a variable for the longest palindrome with 
    an empty string. Then, you nest two for loops and check each substring you create to see if it's a 
    palindrome. 
    
    You exhaust all possible substrings by:
        - the first for loop being meant to exhaust all possible substrings by altering the start point (i)
        - the second for loop being meant to exhaust all possible substrings by altering the end point (j, 
        which will always be one more in value than the starting point or i)
    
    Runtime Complexity:
        O(n^3)
        - The nested for loop is a runtime of O(n^2) and then the if conditionals at the end to check
        the longest palindrome are conducted at the same time and only count as one full iteration, 
        resulting in O(n^3). 
 
-------------------------------------
